#/etc/hosts
x-hosts: &hosts
  extra_hosts:
    - default.dev.com:${NGINX_IP}

services:

  ######## nginx ########
  nginx:
    build:
      context: ./nginx
      args:
        - NGINX_VERSION=${NGINX_VERSION}
    image: ${AUTHOR}/${NGINX_NAME}:${NGINX_VERSION}
    container_name: ${NGINX_NAME}
    restart: always
    privileged: true
    ports:
      - ${NGINX_HOST_HTTP_PORT}:80
      - ${NGINX_HOST_HTTPS_PORT}:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ${NGINX_ROOT_PATH}:/var/www/
      - ${NGINX_LOG_PATH}:/var/log/nginx/
    networks:
      backend:
        ipv4_address: ${NGINX_IP}

  ######## redis ########
  redis:
    build:
      context: ./redis
      args:
        - REDIS_VER=${REDIS_VERSION}
    image: ${AUTHOR}/${REDIS_NAME}:${REDIS_VERSION}
    container_name: ${REDIS_NAME}
    restart: always
    privileged: true
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ${REDIS_DATA_PATH}:/data
      - ${REDIS_CONF_PATH}:/etc/redis/redis.conf
    networks:
      backend:
        ipv4_address: ${REDIS_IP}

  ######## mysql ########
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    image: ${AUTHOR}/${MYSQL_NAME}:${MYSQL_VERSION}
    container_name: ${MYSQL_NAME}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${MYSQL_TIMEZONE}
    volumes:
      - ${MYSQL_CONF_PATH}:/etc/mysql/conf.d/docker.cnf:ro
      - ${MYSQL_DATA_PATH}:/var/lib/mysql
    # M1 需要指定 platform
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    privileged: true
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      backend:
        ipv4_address: ${MYSQL_IP}

  ######## mongo ########
  mongo:
    build:
      context: ./mongo
      args:
        - MONGO_VERSION=${MONGO_VERSION}
    image: ${AUTHOR}/${MONGO_NAME}:${MONGO_VERSION}
    container_name: ${MONGO_NAME}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - ${MONGO_CONF_PATH}:/etc/mongod.conf:ro
      - ${MONGO_PATH}:/data/db:ro
    command:
      - '--auth'
      - '-f'
      - '/etc/mongod.conf'
    restart: always
    privileged: true
    ports:
      - ${MONGO_PORT}:27017
    networks:
      backend:
        ipv4_address: ${MONGO_IP}

  ######## frps ########
  frps:
    build:
      context: ./frp/frps/${FRPS_ARCH}
      args:
        - FRP_VERSION=${FRP_VERSION}
    image: ${AUTHOR}/${FRPS_NAME}:${FRP_VERSION}
    container_name: ${FRPS_NAME}
    restart: always
    privileged: true
    ports:
      # frps服务端口
      - '6500:7000'
      # web管理端口
      - '6501:7500'
      - '6502:7001'
      # http端口
      - '6503:80'
      # https端口
      - '6504:443'
      # 开放给frpc的端口
      - '3505-3510:3505-3510'
    volumes:
      - ${FRPS_INI_PATH}:/etc/frp/frps.toml
      - ${FRPS_LOG_PATH}:/var/log/frps.log
    networks:
      backend:
        ipv4_address: ${FRPS_IP}

  ######## frpc ########
  frpc:
    build:
      context: ./frp/frpc/${FRPC_ARCH}
      args:
        - FRP_VERSION=${FRP_VERSION}
    image: ${AUTHOR}/${FRPC_NAME}:${FRP_VERSION}
    container_name: ${FRPC_NAME}
    restart: always
    privileged: true
    volumes:
      - ${FRPC_INI_PATH}:/etc/frp/frpc.toml
      - ${FRPC_LOG_PATH}:/var/log/frpc.log
    networks:
      backend:
        ipv4_address: ${FRPC_IP}

  ######## wordpress ########
  wp:
    image: wordpress:latest
    container_name: wp
    restart: always
    privileged: true
    ports:
      - ${WP_PORT}:80
    volumes:
      - ${WP_CONF_PATH}:/usr/local/etc/php/conf.d/conf.ini
      - ${WP_ROOT_PATH}:/var/www/html
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_NAME: "${WP_DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${WP_DB_ROOT_PASSWORD}"
    depends_on:
      - mysql
    links:
      - mysql
    networks:
      backend:
        ipv4_address: ${WP_IP}

  ###### wordpress-cli ######
  wpcli:
    image: wordpress:cli
    container_name: wpcli
    restart: always
    privileged: true
    volumes:
      - ${WP_CONF_PATH}:/usr/local/etc/php/conf.d/conf.ini
      - ${WP_ROOT_PATH}:/var/www/html
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_NAME: "${WP_DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${WP_DB_ROOT_PASSWORD}"
    depends_on:
      - mysql
      - wp
    networks:
      backend:
        ipv4_address: ${WP_CLI_IP}

  ######## goapp ########
  goapp:
    build:
      context: ./golang
      args:
        - GO_VERSION=${GO_VERSION}
    image: ${AUTHOR}/${GOAPP_NAME}:${GO_VERSION}
    container_name: ${GOAPP_NAME}
    restart: always
    privileged: true
    ports:
      - '${GO_WEB_PORT}:80'
    volumes:
      - ${GO_APPPATH}:/var/www/goapp/
    networks:
      backend:
        ipv4_address: ${GOAPP_IP}

  ######## gogs ########
  gogs:
    build:
      context: ./gogs
      args:
        - GOGS_VERSION=${GOGS_VERSION}
    image: ${AUTHOR}/${GOGS_NAME}:${GOGS_VERSION}
    container_name: ${GOGS_NAME}
    restart: always
    privileged: true
    ports:
      - ${GOGS_SSH_PORT}:22
      - ${GOGS_WEB_PORT}:3000
    depends_on:
      - mysql
      - nginx
    links:
      - mysql
    volumes:
      - ${GOGS_DATA_PATH}:/data/gogs
    networks:
      backend:
        ipv4_address: ${GOGS_IP}

  ######## zentao ########
  zentao:
    # build:
    #   context: ./zentao
    # image: ${AUTHOR}/zentao:latest
    image: easysoft/zentao
    container_name: zentao
    pull_policy: always
    restart: always
    environment:
      - ZT_MYSQL_HOST=mysql
      - ZT_MYSQL_PORT=3306
      - ZT_MYSQL_USER=root
      - ZT_MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - ZT_MYSQL_DB=zentao
      # 从21.3版本开始，如果已经设置了redis相关环境变量自动开启redis session缓存，可不用配置如下环境变量
      - PHP_SESSION_TYPE=redis
      - PHP_SESSION_PATH=tcp://redis:6379
      - ZT_CACHE_ENABLE=true
      - ZT_CACHE_TYPE=redis
      - ZT_CACHE_SCOPE=private
      - ZT_CACHE_LIFETIME=0
      - PHP_MAX_EXECUTION_TIME=120
      - PHP_MEMORY_LIMIT=512M
      - PHP_POST_MAX_SIZE=128M
      - PHP_UPLOAD_MAX_FILESIZE=128M
    ports:
      - ${ZENTAO_PORT}:80
    volumes:
      - ${ZENTAO_DATA_PATH}:/data
    depends_on:
      - mysql
      - redis
    links:
      - mysql
      - redis
    networks:
      backend:
        ipv4_address: ${ZENTAO_IP}

networks:
  backend:
    name: backend
    external: true
