version: "3.8"
services:

  ######## nginx ########
  nginx:
    build:
      context: ./nginx
      args:
        - VERSION=${REDIS_VERSION}
        - ZP_MAINTAINER=${ZP_MAINTAINER}
    container_name: nginx
    privileged: true
    ports:
      - ${NGINX_HOST_HTTP_PORT}:80
      - ${NGINX_HOST_HTTPS_PORT}:443
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ${WEB_ROOT_PATH}:/var/www/
      - ${NGINX_LOG_PATH}:/var/log/nginx/
    networks:
      backend:
        ipv4_address: ${NGINX_IP}

  ######## redis ########
  redis:
    build:
      context: ./redis
      args:
        - VERSION=${REDIS_VERSION}
        - ZP_MAINTAINER=${ZP_MAINTAINER}
    container_name: redis
    command: redis-server /etc/redis/redis.conf
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ${REDIS_DATA_PATH}:/data
      - ${REDIS_CONF_PATH}:/etc/redis/redis.conf
    networks:
      backend:
        ipv4_address: ${REDIS_IP}

  ######## mysql ########
  mysql:
    build:
      context: ./mysql
      args:
        - VERSION=${MYSQL_VERSION}
        - ZP_MAINTAINER=${ZP_MAINTAINER}
    container_name: mysql
    # M1 需要指定 platform
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${MYSQL_TIMEZONE}
    volumes:
      # mysql默认配置文件
      - ${MYSQL_CONF_PATH}:/etc/mysql/conf.d/docker.cnf
      # 数据文件
      - ${MYSQL_DATA_PATH}:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    privileged: true
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      backend:
        ipv4_address: ${MYSQL_IP}

  ######## frps ########
  frps:
    build:
      context: ./frp/frps/${FRPS_ARCH}
      args:
        - FRP_VERSION=${FRP_VERSION}
        - ZP_MAINTAINER=${ZP_MAINTAINER}
    container_name: frps
    privileged: true
    restart: always
    ports:
      # frps服务端口
      - '6500:7000'
      # web管理端口
      - '6501:7500'
      - '6502:7001'
      # http端口
      - '6503:80'
      # https端口
      - '6504:443'
      # 开放给frpc的端口
      - '3505-3510:3505-3510'
    volumes:
      - ${FRPS_INI_PATH}:/etc/frp/frps.ini
      - ${FRPS_LOG_PATH}:/var/log/frps.log
    networks:
      backend:
        ipv4_address: ${FRPS_IP}

  ######## frpc ########
  frpc:
    build:
      context: ./frp/frpc/${FRPC_ARCH}
      args:
        - FRP_VERSION=${FRP_VERSION}
        - ZP_MAINTAINER=${ZP_MAINTAINER}
    container_name: frpc
    privileged: true
    restart: always
    volumes:
      - ${FRPC_INI_PATH}:/etc/frp/frpc.ini
      - ${FRPC_LOG_PATH}:/var/log/frps.log
    networks:
      backend:
        ipv4_address: ${FRPC_IP}
  ######## wordpress1 ########
  wordpress1:
    container_name: wordpress1
    image: wordpress
    privileged: true
    restart: always
    links:
      - mysql
    ports:
      - '8081:80'
    volumes:
      - ${WP_ROOT_PATH1}:/var/www/html/
    networks:
      backend:
        ipv4_address: ${WP_IP1}
  ######## wordpress2 ########
  wordpress2:
    container_name: wordpress2
    image: wordpress
    privileged: true
    restart: always
    links:
      - mysql
    ports:
      - '8082:80'
    volumes:
      - ${WP_ROOT_PATH2}:/var/www/html/
    networks:
      backend:
        ipv4_address: ${WP_IP2}

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: ${SUBNET}
